# Application Name
spring.application.name=${APP_NAME:autoatendimento}

# Server Configuration
# For using the Mercado Pago notification Webhook, a tunneling service like ngrok is required
# $ ngrok http --domain=${NGROK_DOMAIN:your-default-domain.ngrok-free.app} 8080
server.notification.url=${NOTIFICATION_URL}

# Database Configuration
spring.datasource.url=jdbc:postgresql://${DATASOURCE_URL:localhost}:5432/autoatendimento
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Mercado Pago Credentials
mercado.pago.access.token=${MERCADO_PAGO_ACCESS_TOKEN}
mercado.pago.api.criacao.qr.code.url=${MERCADO_PAGO_QR_CODE_URL}
mercado.pago.api.criacao.pedido.url=${MERCADO_PAGO_PEDIDO_URL}
mercado.pago.api.vendedor.id=${MERCADO_PAGO_VENDEDOR_ID}
mercado.pago.caixa.url=${MERCADO_PAGO_CAIXA_URL}
mercado.pago.loja.url=${MERCADO_PAGO_LOJA_URL}
mercado.pago.api.caixa.id.externo=${MERCADO_PAGO_CAIXA_ID_EXTERNO}
mercado.pago.api.loja.id.externo=${MERCADO_PAGO_LOJA_ID_EXTERNO}

# Spring Mail Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
email.from=${EMAIL_FROM}

# JWT Configuration
jwt.secret.key=${JWT_SECRET_KEY:test-secret-key}
